{"version":3,"sources":["components/Chart.jsx","components/Charts.jsx","hooks/useDarkMode.js","hooks/useLocalStorage.js","components/Navbar.jsx","components/CoinModal.jsx","index.js"],"names":["Chart","_ref","sparklineData","formattedData","map","price","idx","timeToSubtract","value","date","moment","subtract","format","length","filter","data","react_default","a","createElement","es6","width","height","type","dataKey","stroke","strokeDasharray","interval","Charts","coinData","handleClick","history","className","coin","key","name","onClick","e","push","concat","id","s","symbol","src","image","alt","components_Chart","sparkline_in_7d","useDarkMode","_useLocalStorage","initialValue","_useState","useState","item","window","localStorage","getItem","JSON","parse","_useState2","Object","slicedToArray","storedValue","setStoredValue","newValue","setItem","stringify","useLocalStorage","_useLocalStorage2","darkMode","setDarkMode","body","document","getElementsByTagName","useEffect","classList","add","remove","Navbar","_useDarkMode","_useDarkMode2","react_router_dom","to","CoinModal","Fragment","rootElement","getElementById","ReactDOM","render","setCoinData","_useState3","_useState4","_useState5","_useState6","setCoin","fetchCoinData","axios","get","then","res","catch","err","console","log","preventDefault","components_Navbar","react_router","path","exact","props","components_Charts","assign","components_CoinModal"],"mappings":"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","file":"static/js/main.d74bd14c.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip\n} from \"recharts\";\n\nconst Chart = ({ sparklineData }) => {\n  const formattedData = sparklineData\n    .map((price, idx) => {\n      if (idx % 6 === 0) {\n        const timeToSubtract = 168 - idx;\n        const date = moment()\n          .subtract(timeToSubtract, \"hours\")\n          .format(\"ddd h:mma\");\n        return { value: price, date };\n      } else if (idx === sparklineData.length - 1) {\n        const date = moment().format(\"ddd h:mma\");\n        return { value: price, date };\n      }\n      return null;\n    })\n    .filter(data => data);\n\n  return (\n    <LineChart width={1100} height={300} data={formattedData}>\n      <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n      <XAxis dataKey=\"date\" interval={3} />\n      <YAxis />\n      <Tooltip />\n    </LineChart>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"./Chart\";\n\nconst Charts = ({ coinData, handleClick, history }) => {\n\n  return (\n    <div className=\"charts\" >\n      {coinData.map(coin => (\n        <div className=\"chart__container\" key={coin.name} onClick={(e)=>{\n          history.push(`/chart/${coin.id}`)\n          handleClick(e, coin)}}s>\n          <h2 className=\"coin__title\">{coin.name}</h2>\n          <h4 className=\"coin__symbol\">{coin.symbol}</h4>\n          <div className=\"coin__logo\">\n            <img src={coin.image} height=\"40\" alt={coin.name} />\n          </div>\n          <Chart sparklineData = { coin.sparkline_in_7d.price } />\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Charts;\n","\nimport { useLocalStorage } from './useLocalStorage';\nimport { useEffect } from 'react'\nexport const useDarkMode = () => {\n    const [darkMode, setDarkMode] = useLocalStorage(\"isDarkMode\", false);\n    const body = document.getElementsByTagName(\"BODY\")[0];\n    useEffect(()=>{\n    }, [darkMode])\n    //ternary to check if darkMode is false or true \n    darkMode \n    ?\n    body.classList.add('dark-mode')\n    :\n    body.classList.remove('dark-mode')\n    \n    return [darkMode, setDarkMode]\n}","import { useState } from 'react';\n\nexport const useLocalStorage = (key, initialValue) =>{\n\n    const [ storedValue, setStoredValue ]  = useState(()=>{\n        //saving the key to a variable called item.\n        const item = window.localStorage.getItem(key);\n        // Checking to see if thew item already exist in the local storage, if it does we parse the item else we return the initial value. WE return the initial value just because we don't want to pass undefined. \n        return item ? JSON.parse(item) : initialValue;\n    });\n\n    const setValue = (newValue) => {\n        setStoredValue(newValue);\n        //setting new item to  local storage \n        // to set an item to local storage you need to convert it to string so we do that by passing the value inside of a json.stringify();\n        window.localStorage.setItem(key, JSON.stringify(newValue));\n    }\n    \n    return [storedValue, setValue]\n}\n\n","import React, { useEffect } from 'react';\nimport {Link} from 'react-router-dom'\nimport { useDarkMode } from '../hooks/useDarkMode';\n\nconst Navbar = () => {\n  const [darkMode, setDarkMode] = useDarkMode();\n\n  useEffect(() => {\n  }, [darkMode]);\n  return (\n    <nav className=\"navbar\">\n      <h1>\n        <Link to='/'>\n          Crypto Tracker\n        </Link>\n      </h1>\n      <div className=\"dark-mode__toggle\">\n        <div\n          onClick={()=>{setDarkMode(!darkMode)}}\n          className={darkMode ? 'toggle toggled' : 'toggle'}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nimport Chart from './Chart'\n\nfunction CoinModal({coin, handleClick}) {\n    return (\n        <>\n           {coin.name  ?\n            <div className=\"chart__container\" key={coin.name} onClick={(e)=>{handleClick(e, coin)}}s>\n                <h2 className=\"coin__title\">{coin.name}</h2>\n                <h4 className=\"coin__symbol\">{coin.symbol}</h4>\n                <div className=\"coin__logo\">\n                <img src={coin.image} height=\"40\" alt={coin.name} />\n                </div>\n                <Chart sparklineData = { coin.sparkline_in_7d.price } />\n            </div>\n            : <h2>Sorry, No Data to display, <Link to='/'>Go Home</Link></h2>\n            \n            }\n        </>\n    )\n}\n\nexport default CoinModal","import React, { useState, useEffect } from \"react\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\n\nimport Charts from \"./components/Charts\";\nimport Navbar from \"./components/Navbar\";\n\nimport \"./styles.scss\";\nimport CoinModal from \"./components/CoinModal\";\n\nconst App = () => {\n  const [coinData, setCoinData] = useState([]);\n  const [display, setDisplay ] = useState('none');\n  const [coin, setCoin] =  useState([]);\n  useEffect(() => {\n    fetchCoinData();\n  }, []);\n\n  const fetchCoinData = () =>{\n    axios\n    .get(\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true\"\n    )\n    .then(res => setCoinData(res.data))\n    .catch(err => console.log(err));\n  }\n  const handleClick = (e, data) =>{\n    e.preventDefault();\n    console.log(data)\n    setCoin(data)\n  }\n  return (\n    <div className=\"App\">\n\n      <Navbar />\n\n      <Route \n        path ='/'\n        exact\n        render = {props=>{\n          return  <Charts \n                    {...props}\n                    coinData={coinData} \n                    handleClick ={handleClick}\n                  />\n        }}\n      />\n      <Route \n        path ='/chart/:id'\n        exact\n        render = {props=>{\n          return  <CoinModal \n                    {...props}\n                    coin = {coin}\n                    handleClick = { handleClick }\n                  />\n        }}\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n, rootElement);\n"],"sourceRoot":""}